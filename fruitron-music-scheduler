#!/bin/bash

MPC='mpc'
BEDTIME_VOLUME=50
BEDTIME_CROSSFADE=8
LATE_START_TIME=1355

if $MPC | grep -q playing; then

    # Wait until we get close to the end of a song or it gets too late
    while true; do
        sleep 10
        remaining_time=$($MPC | grep playing | cut -d ' ' -f 5 |
                         awk -F '[:/]' '{ print ($3 * 60 + $4) - ($1 * 60 + $2) }')
        if [[ $remaining_time -lt $((10 + $BEDTIME_CROSSFADE * 3)) ]]; then
            end_early=
            break
        elif [[ $(date +'%H %M' | awk '{ print $1 * 60 + $2 }') -ge \
                $LATE_START_TIME ]]; then
            end_early=yes
            break
        fi
    done

    # Disable repeat
    $MPC repeat off

    # Enable bedtime crossfade
    $MPC crossfade $BEDTIME_CROSSFADE

    # Queue the songs
    last_song_position=$($MPC playlist | wc -l)
    $MPC ls bedtime | sort | $MPC add

    if [[ $end_early ]]; then

        # Fade out current song
        volume=$($MPC volume | cut -d ' ' -f 2 | sed 's/%//')
        newvolume=$volume
        while [ $newvolume -gt 0 ]; do
            sleep 0.4
            $MPC volume $newvolume
            newvolume=$(($newvolume - 3))
        done
        $MPC stop
        $MPC volume $volume

        # Start with Papillon
        $MPC play $(($last_song_position + 2))

    else

        # Move the current playing song to just before the bedtime songs
        $MPC move $($MPC -f %position% | head -n 1) $last_song_position

        # Wait until Nemo ends
        $MPC current --wait
        $MPC current --wait

    fi

    # Wait a bit and then reset the crossfading
    sleep $BEDTIME_CROSSFADE
    $MPC crossfade 0

    # Reset the volume after Papillon ends
    $MPC current --wait
    $MPC volume $BEDTIME_VOLUME
fi
