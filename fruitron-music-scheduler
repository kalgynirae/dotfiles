#!/bin/bash

MPC='mpc'
BEDTIME_VOLUME=50
BEDTIME_CROSSFADE=8

if $MPC | grep -q playing; then

    last_song_position=$($MPC playlist | wc -l)
    remaining_time=$($MPC | grep playing | cut -d ' ' -f 5 |
                     awk -F '[:/]' '{ print ($3 * 60 + $4) - ($1 * 60 + $2) }')
    volume=$($MPC volume | cut -d ' ' -f 2 | sed 's/%//')

    # Disable repeat
    $MPC repeat off

    # Enable bedtime crossfade
    $MPC crossfade $BEDTIME_CROSSFADE

    # Queue the songs
    $MPC ls bedtime | sort | $MPC add

    if [ $remaining_time -gt 600 ]; then

        # Fade out current song
        newvolume=$volume
        while [ $newvolume -gt 0 ]; do
            sleep 0.5
            $MPC volume $newvolume
            newvolume=$(($newvolume - 3))
        done
        $MPC stop
        $MPC volume $volume

        # Start with Papillon
        $MPC play $(($last_song_position + 2))

    else

        # Move the current playing song to just before the bedtime songs
        $MPC move $($MPC -f %position% | head -n 1) $last_song_position

        # Wait until Nemo ends
        $MPC current --wait
        $MPC current --wait

    fi

    # Wait a bit and then reset the crossfading
    sleep $BEDTIME_CROSSFADE
    $MPC crossfade 0

    # Reset the volume after Papillon ends
    $MPC current --wait
    $MPC volume $BEDTIME_VOLUME
fi
