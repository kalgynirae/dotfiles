#!/usr/bin/env python3
"""usage: colorize [PATTERN]

Give each group of output lines a different color. Consecutive lines form a
group if PATTERN matches the same text.  PATTERN defaults to ^[\w.-/]+ if not
specified.
"""
import re
import sys
from itertools import cycle, groupby

colors = [
    "#4e9a06",
    "#386cb0",
    "#c4a800",
    "#c81f1f",
    "#6050b0",
    "#06989a",
    "#c8742a",
    "#80487f",
    "#6b6d68",
]
if len(sys.argv) == 1:
    matcher = re.compile(r"^[\w.-/]+").search
elif len(sys.argv) == 2:
    matcher = re.compile(sys.argv[1]).search
else:
    print(__doc__, file=sys.stderr)
    sys.exit(1)


def cycle_colors():
    for color in cycle(colors):
        r = int(color[1:3], 16)
        g = int(color[3:5], 16)
        b = int(color[5:7], 16)
        yield f"\x1b[38;2;{r};{g};{b}m"


def key(line):
    match = matcher(line)
    if match:
        return match.group()
    return None


for color, (key, lines) in zip(cycle_colors(), groupby(sys.stdin, key=key)):
    for line in lines:
        line = line.rstrip("\n")
        if key:
            print(f"{color}{line}\x1b[0m")
        else:
            print(f"{line}")
