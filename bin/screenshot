#!/bin/bash
# usage: screenshot [--region|--window]
#
# Take a screenshot in Sway and save it to ~/pictures/screenshots/.
#
# Area selection:
#   (default)     Select the focused output
#   --region      Select a region with the mouse
#   --window      Select the focused window

usage() {
  awk <"$0" '/$^/{exit};NR==2,0{print substr($0, 3)}'
}

if [[ " $* " == *" --help "* ]] || (( $# > 1 )); then
  usage >&2
  exit 1
fi

if [[ " $* " == *" --region "* ]]; then
  region=$(slurp)
  dimensions=$(cut -d' ' -f2 <<<"$region")
elif [[ " $* " == *" --window "* ]]; then
  region=$(sway-window --focused --rect)
  dimensions=$(cut -d' ' -f2 <<<"$region")
else
  outputs=$(swaymsg -t get_outputs)
  output=$(<<<"$outputs" jq -r '.[] | select(.focused) | .name')
  dimensions=$(<<<"$outputs" jq -r '.[] | select(.focused) | .current_mode | "\(.width)x\(.height)"')
fi

output_path=$HOME/pictures/screenshots/$(date '+%Y-%m-%d-%s')-$dimensions.png
while [[ -e $output_path ]]; do
  if [[ $output_path =~ -([0-9]+).png$ ]]; then
    new_suffix=-$(( BASH_REMATCH[1] + 1 )).png
    output_path=${output_path/${BASH_REMATCH[0]}/$new_suffix}
  else
    output_path=${output_path/.png/-1.png}
  fi
done

if [[ -v region ]]; then
  args=(-g "$region")
else
  args=(-o "$output")
fi

if grim "${args[@]}" "$output_path"; then
  notify-send -a screenshot -t 5000 -u low screenshot "Screenshot saved to $output_path" &
  imv "$output_path" &
  wl-copy <"$output_path" &
fi
