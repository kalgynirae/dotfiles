#!/bin/bash
# usage: screenshot [--region|--window] [--delay SECONDS]
#
# Take a screenshot in Hyprland and save it to ~/pictures/screenshots/.
#
# Area selection:
#   (none)        Screenshot the focused output
#   --region      Select a region with the mouse
#   --window      Screenshot the focused window
#
# Options:
#   --delay SECONDS   Wait after area selection before taking the screenshot

usage() {
  awk <"$0" '/$^/{exit};NR==2,0{print substr($0, 3)}'
}

mode=
while (( $# )); do
  case "$1" in
    --help)
      usage
      exit 0
      ;;
    --region)
      mode=region
      ;;
    --window)
      mode=window
      ;;
    --delay)
      if [[ $2 =~ ^[[:digit:]]+$ ]]; then
        delay=$2
        shift
      else
        usage >&2
        exit 2
      fi
      ;;
    *)
      usage >&2
      exit 2
      ;;
  esac
  shift
done

if [[ $mode == region ]]; then
  region=$(slurp)
  dimensions=$(cut -d' ' -f2 <<<"$region")
elif [[ $mode == window ]]; then
  region=$(hyprctl activewindow -j | jq -r '"\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"')
  dimensions=$(cut -d' ' -f2 <<<"$region")
else
  outputs=$(hyprctl monitors -j)
  output=$(<<<"$outputs" jq -r '.[] | select(.focused) | .name')
  dimensions=$(<<<"$outputs" jq -r '.[] | select(.focused) | .current_mode | "\(.width)x\(.height)"')
fi

if [[ -v delay ]]; then
  sleep "$delay"
fi

output_path=$HOME/pictures/screenshots/$(date '+%Y-%m-%d-%s')-$dimensions.png
while [[ -e $output_path ]]; do
  if [[ $output_path =~ -([0-9]+).png$ ]]; then
    new_suffix=-$(( BASH_REMATCH[1] + 1 )).png
    output_path=${output_path/${BASH_REMATCH[0]}/$new_suffix}
  else
    output_path=${output_path/.png/-1.png}
  fi
done

if [[ -v region ]]; then
  args=(-g "$region")
else
  args=(-o "$output")
fi

if grim "${args[@]}" "$output_path"; then
  imv "$output_path" &
  wl-copy <"$output_path" &
fi
