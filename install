#!/bin/bash
shopt -s nullglob

read -rp "Install packages? [y/N] "
if [[ $REPLY == y ]]; then
  packages() {
    {
      cat packages
      [[ -e packages.$HOSTNAME ]] && cat "packages.$HOSTNAME"
    } | sort
  }
  unknown_packages() {
    # shellcheck disable=SC2046
    sudo pacman -S --needed $(packages) |& grep "target not found" | awk '{print $5}'
  }
  known_packages() {
    comm -23 <(packages) <(unknown_packages)
  }
  # shellcheck disable=SC2046
  sudo pacman -S --needed $(known_packages)
  # shellcheck disable=SC2046
  pacaur -Sa --needed $(unknown_packages)
fi

maybelink() {
  if [[ ! -e $1 ]]; then
    echo "$1 doesn't exist; skipping"
  elif [[ $2 -ef $1 ]]; then
    echo "$2 is already correct; skipping"
  else
    mkdir -vp "$(dirname "$2")"
    if [[ -e $2 || -h $2 ]]; then
      echo mv "$2" "$2.old"
      mv "$2" "$2.old"
    fi
    echo ln --symbolic --relative "$1" "$2"
    ln --symbolic --relative "$1" "$2"
  fi
}

render() {
  local source=$1.mustache
  local dest=$2
  if [[ ! -e .data.yml ]]; then
    echo ".data.yml doesn't exist; skipping all rendering"
    return
  elif [[ ! -e $source ]]; then
    echo "$source doesn't exist; skipping"
    return
  fi
  if [[ $source -ot $dest ]]; then
    echo "$dest was updated more recently than $source; skipping"
    diff --color -u <(mustache .data.yml "$source") "$dest"
  else
    mkdir -vp "$(dirname "$dest")"
    if [[ -e $dest && ! -f $dest || -h $dest ]]; then
      echo mv "$dest" "$dest.old"
      mv "$dest" "$dest.old"
    fi
    echo mustache .data.yml "$source" \>"$dest"
    mustache .data.yml "$source" >"$dest"
    touch -mr "$source" "$dest"
  fi
}

maybelink XCompose ~/.XCompose
maybelink alacritty.yml ~/.config/alacritty/alacritty.yml
maybelink alsoftrc ~/.alsoftrc
maybelink atom-keymap.cson ~/.atom/keymap.cson
maybelink bash_profile ~/.bash_profile
maybelink bashrc ~/.bashrc
maybelink bin ~/bin
maybelink calendar-notifier.service ~/.config/systemd/user/calendar-notifier.service
maybelink dunstrc ~/.config/dunst/dunstrc
maybelink feh-themes ~/.config/feh/themes
maybelink fonts.conf ~/.config/fontconfig/fonts.conf
maybelink gammastep.ini ~/.config/gammastep/config.ini
maybelink gemrc ~/.gemrc
maybelink gitconfig ~/.gitconfig
maybelink gtk-3.0-settings.ini ~/.config/gtk-3.0/settings.ini
maybelink gtkrc-2.0 ~/.gtkrc-2.0
maybelink i3-wait.service ~/.config/systemd/user/i3-wait.service
maybelink imv ~/.config/imv/config
maybelink index.theme ~/.local/share/icons/default/index.theme
maybelink inputrc ~/.inputrc
maybelink ipython_config.py ~/.ipython/profile_default/ipython_config.py
maybelink mouse-monitor.service ~/.config/systemd/user/mouse-monitor.service
maybelink mpv.conf ~/.config/mpv/mpv.conf
maybelink nvim ~/.config/nvim
maybelink nvim/plugins ~/.local/share/nvim/site/pack/plugins/start
maybelink picom.conf ~/.config/picom.conf
maybelink profile ~/.profile
maybelink pythonrc ~/.pythonrc
maybelink roficonfig ~/.config/rofi/config
maybelink sound/connect-sound.service ~/.config/systemd/user/connect-sound.service
maybelink sound/jalv@.service ~/.config/systemd/user/jalv@.service
maybelink sxhkdrc ~/.config/sxhkd/sxhkdrc
maybelink tmux.conf ~/.tmux.conf
maybelink update-wallpaper.service ~/.config/systemd/user/update-wallpaper.service
maybelink update-wallpaper.timer ~/.config/systemd/user/update-wallpaper.timer
maybelink user-dirs.dirs ~/.config/user-dirs.dirs
maybelink waybar.css ~/.config/waybar/style.css
render i3config ~/.config/i3/config
render i3statusconfig ~/.config/i3status/config
render sway ~/.config/sway/config
render waybar ~/.config/waybar/config

# Set cursor theme in gsettings (waybar seems to use this)
cursortheme=$(grep 'gtk-cursor-theme-name' gtk-3.0-settings.ini | cut -d= -f2)
cursorsize=$(grep 'gtk-cursor-theme-size' gtk-3.0-settings.ini | cut -d= -f2)
gsettings set org.gnome.desktop.interface cursor-theme "$cursortheme"
gsettings set org.gnome.desktop.interface cursor-size "$cursorsize"

for app in applications/*; do
  if [[ $app == minecraft.desktop && $HOSTNAME != colinchan-fedora* ]]; then
    continue
  fi
  maybelink "$app" ~/.local/share/"$app"
done

for unit in sway-session/*; do
  maybelink "$unit" ~/.config/systemd/user/"${unit#sway-session/}"
done

firefox_default_profiles=(~/.mozilla/firefox/*.default*)
count=${#firefox_default_profiles[@]}
if (( count == 1 )); then
  profile=${firefox_default_profiles[0]}
  [[ ! -d "$profile"/chrome ]] && mkdir -v "$profile"/chrome
  render userChrome.css "$profile"/chrome/userChrome.css
  render userContent.css "$profile"/chrome/userContent.css
else
  echo "$count Firefox profiles found; skipping"
fi

echo "Compiling terminfos.ti"
TERMINFO=/usr/share/terminfo tic -x -o ~/.terminfo terminfos.ti

echo "Reloading systemd --user"
systemctl --user daemon-reload

echo "Run 'git submodule update --init' to get the vim plugins"
