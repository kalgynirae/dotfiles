#!/bin/bash
shopt -s nullglob

log() {
  printf '%s\n' "$*"
}

log-change() {
  printf '\e[33m%s\e[39m\n' "$*"
}

if grep -q "Arch Linux" /etc/os-release; then
  if [[ $1 != --packages ]]; then
    log "Not installing packages without --packages"
  else
    packages() {
      {
        cat packages
        [[ -e packages.$HOSTNAME ]] && cat "packages.$HOSTNAME"
      } | sort
    }
    # shellcheck disable=SC2046
    paru -S --needed $(packages)
  fi
fi

maybelink() {
  if [[ ! -e $1 ]]; then
    log "${1@Q} doesn't exist; skipping"
  elif [[ $2 -ef $1 ]]; then
    log "${2@Q} is already correct; skipping"
  else
    mkdir -vp "$(dirname "$2")"
    if [[ -e $2 || -h $2 ]]; then
      log-change "mv ${2@Q} ${2@Q}.old"
      mv "$2" "$2.old"
    fi
    log-change "ln --symbolic --relative ${1@Q} ${2@Q}"
    ln --symbolic --relative "$1" "$2"
  fi
}

render() {
  local source=$1.mustache
  local dest=$2
  if [[ ! -e .data.yml ]]; then
    log ".data.yml doesn't exist; skipping all rendering"
    return
  elif [[ ! -e $source ]]; then
    log "${source@Q} doesn't exist; skipping"
    return
  fi
  if [[ $source -ot $dest ]]; then
    log "${dest@Q} was updated more recently than ${source@Q}; skipping"
    diff --color -u <(mustache .data.yml "$source") "$dest"
  else
    mkdir -vp "$(dirname "$dest")"
    if [[ -e $dest && ! -f $dest || -h $dest ]]; then
      log-change "mv ${dest@Q} ${dest@Q}.old"
      mv "$dest" "$dest.old"
    fi
    if ! temp="$(mktemp)"; then
      log "Not rendering ${dest@Q} because mktemp failed"
      return
    fi
    log "mustache .data.yml ${source@Q} >${temp@Q}"
    mustache .data.yml "$source" >"$temp"
    if ! cmp --quiet "$dest" "$temp"; then
      log-change "mv -fTv ${temp@Q} ${dest@Q}"
      mv -fTv "$temp" "$dest"
      log-change "touch -mr ${source@Q} ${dest@Q}"
      touch -mr "$source" "$dest"
    else
      log "${dest@Q} is already correct; skipping"
      rm "$temp"
    fi
  fi
}

install() {
  if [[ -e $1.mustache ]]; then
    render "$@"
  else
    maybelink "$@"
  fi
}

install XCompose ~/.XCompose
install alacritty.yml ~/.config/alacritty/alacritty.yml
install alsoftrc ~/.alsoftrc
install bash_profile ~/.bash_profile
install bashrc ~/.bashrc
install bin ~/bin
install electron-flags.conf ~/.config/electron-flags.conf
install electron15-flags.conf ~/.config/electron15-flags.conf
install environment.conf ~/.config/environment.d/environment.conf
install fonts.conf ~/.config/fontconfig/fonts.conf
install gammastep.ini ~/.config/gammastep/config.ini
install gemrc ~/.gemrc
install gitconfig ~/.gitconfig
install gtk-3.0-settings.ini ~/.config/gtk-3.0/settings.ini
install gtk-4.0-settings.ini ~/.config/gtk-4.0/settings.ini
install gtkrc-2.0 ~/.gtkrc-2.0
install imv ~/.config/imv/config
install index.theme ~/.local/share/icons/default/index.theme
install inputrc ~/.inputrc
install ipython_config.py ~/.ipython/profile_default/ipython_config.py
install kitty.conf ~/.config/kitty/kitty.conf
install mpv.conf ~/.config/mpv/mpv.conf
install nvim ~/.config/nvim
install nvim/plugins ~/.local/share/nvim/site/pack/plugins/start
install pipewire/10-zeroconf.conf ~/.config/pipewire/pipewire.conf.d/10-zeroconf.conf
install profile ~/.profile
install pythonrc ~/.pythonrc
install swaylock ~/.config/swaylock/config
install tmux.conf ~/.tmux.conf
install user-dirs.dirs ~/.config/user-dirs.dirs
install wezterm.lua ~/.config/wezterm/wezterm.lua
install sway ~/.config/sway/config
install waybar ~/.config/waybar/config
install waybar.css ~/.config/waybar/style.css
install wayfire.ini ~/.config/wayfire.ini

# Mirror various GTK settings in gsettings (waybar and Firefox seem to use these)
gsettings set org.gnome.desktop.interface cursor-blink "$(grep 'gtk-cursor-blink' ~/.config/gtk-3.0/settings.ini | cut -d= -f2)"
gsettings set org.gnome.desktop.interface cursor-theme "$(grep 'gtk-cursor-theme-name' ~/.config/gtk-3.0/settings.ini | cut -d= -f2)"
gsettings set org.gnome.desktop.interface cursor-size "$(grep 'gtk-cursor-theme-size' ~/.config/gtk-3.0/settings.ini | cut -d= -f2)"

# Propagate dark theme setting to GNOME
if [[ $(awk <.data.yml '/dark-theme:/ {print $2}') = true ]]; then
  gsettings set org.gnome.desktop.interface color-scheme prefer-dark
else
  gsettings set org.gnome.desktop.interface color-scheme default
fi

# Reload config in kitty
pkill -USR1 kitty

# Key repeat settings for GNOME
gsettings set org.gnome.desktop.peripherals.keyboard delay 145
gsettings set org.gnome.desktop.peripherals.keyboard repeat-interval 17

for app in applications/*; do
  if [[ $app == minecraft.desktop && $HOSTNAME != colinchan-fedora* ]]; then
    continue
  fi
  maybelink "$app" ~/.local/share/"$app"
done

for tmpfiles_conf in tmpfiles.d/*; do
  maybelink "$tmpfiles_conf" ~/.config/user-tmpfiles.d/"${tmpfiles_conf#tmpfiles.d/}"
done

for unit in units/*; do
  maybelink "$unit" ~/.config/systemd/user/"${unit#units/}"
done

firefox_default_profiles=(~/.mozilla/firefox/*.default*)
count=${#firefox_default_profiles[@]}
if (( count == 1 )); then
  profile=${firefox_default_profiles[0]}
  [[ ! -d "$profile"/chrome ]] && mkdir -v "$profile"/chrome
  install userChrome.css "$profile"/chrome/userChrome.css
  install userContent.css "$profile"/chrome/userContent.css
else
  log "$count Firefox profiles found; skipping"
fi

log-change "Compiling terminfos.ti"
TERMINFO=/usr/share/terminfo tic -x -o ~/.terminfo terminfos.ti

log-change "Reloading systemd --user"
systemctl --user daemon-reload
